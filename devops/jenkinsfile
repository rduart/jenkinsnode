pipeline {
  agent {
    kubernetes {
      yamlFile 'devops/KubernetesPod.yaml'
    }
  }
  environment {
    workingGitURL='https://github.com/rduart/jenkinsnode.git'
    workingBranch='main'
    http_proxy = 'http://proxy.cammis.medi-cal.ca.gov:8080'
    https_proxy = 'http://proxy.cammis.medi-cal.ca.gov:8080'
    no_proxy ='169.254.169.254,ec2.us-east-1.amazonaws.com,s3.us-east-1.amazonaws.com,s3.us-west-2.amazonaws.com,ec2.us-west-2.amazonaws.com,elasticloadbalancing.us-east-1.amazonaws.com,elasticloadbalancing.us-west-2.amazonaws.com,.dev.ocp.cammis.medi-cal.ca.gov,.bld.ocp.cammis.medi-cal.ca.gov,.qa.ocp.cammis.medi-cal.ca.gov,prd.ocp.cammis.medi-cal.ca.gov,.apps.dev.ocp.cammis.medi-cal.ca.gov,.apps.bld.ocp.cammis.medi-cal.ca.gov,.apps.qa.ocp.cammis.medi-cal.ca.gov,.apps.prd.ocp.cammis.medi-cal.ca.gov,s3.dualstack.us-east-1.amazonaws.com,s3.dualstack.us-west-2.amazonaws.com,.s3.dualstack.us-east-1.amazonaws.com,.s3.dualstack.us-west-2.amazonaws.com,.dkr.ecr.us-west-2.amazonaws.com,api.ecr.us-west-2.amazonaws.com, ,.dkr.ecr.us-east-1.amazonaws.com,api.ecr.us-east-1.amazonaws.com'
    AWS_DEFAULT_REGION = 'us-west-2'
    
  }  
  stages {
    stage ('Prep') {
      steps {
        echo '*************************************************************'
        echo 'before container'
        echo '*************************************************************'
        //sh 'env' 
        //echo "http_proxy : ${http_proxy}"
        //echo "https_proxy : ${https_proxy}"
        
        }  
    }
    stage('buildah') {
      steps {
        
        echo "http_proxy : ${http_proxy}"
        echo "https_proxy : ${https_proxy}"
        
        container('buildah') {
          script {
          
            withCredentials([aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'randy-aws-creds', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]) {
          
          
            echo "AWS_ACCESS_KEY_ID : ${AWS_ACCESS_KEY_ID}"
            echo "AWS_SECRET_ACCESS_KEY : ${AWS_SECRET_ACCESS_KEY}"
            
            echo '*************************************************************'
            echo '   buildah proxy setup'
            echo '*************************************************************'
            //sh 'env'
            echo "http_proxy : ${http_proxy}"
            echo "https_proxy : ${https_proxy}"
            sh 'whoami'
            //sh 'yum update'
            sh 'yum install -y unzip'
          
            sh 'curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"'
            sh 'unzip -q awscliv2.zip'
          
            sh 'pwd'
          
            //sh 'ls -lha'
            //sh 'ls -lha /home/jenkins/agent/workspace/NextPL2/aws'
            //sh 'ls -lha /home/jenkins/agent/workspace/NextPL2/aws/dist'
            //sh 'ls -lha /home/jenkins/agent/workspace/NextPL2/aws/dist/aws'
            //sh 'cd /home/jenkins/agent/workspace/NextPL2/aws/dist'
          
       
            sh './aws/install'
            sh 'aws --version'
            sh 'aws s3 ls'
            //sh 'aws ecr get-login-password'
            def PASS = sh returnStdout: true, script:"aws ecr get-login-password"
            echo "PASS: $PASS" 
            sh 'buildah login -u "AWS" -p "$PASS" "136299550619.dkr.ecr.us-west-2.amazonaws.com"
            //""" 
            }  //end with
          } // end script
        }  // end container
        container('node') {
          //sh 'echo BUSYBOX_CONTAINER_ENV_VAR = ${CONTAINER_ENV_VAR}'
          //echo "http_proxy : ${http_proxy}"
          //echo "https_proxy : ${https_proxy}"
          //sh '/bin/busybox'
          
          echo '*************************************************************'
          echo 'proxy setup'
          echo '*************************************************************'
          echo "http_proxy : ${http_proxy}"
          echo "https_proxy : ${https_proxy}"
          
          //sh 'curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"'
          //sh 'wget https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip -O awscliv2.zip'
          
          //sh 'wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.5.0.2216-linux.zip'
          
        }  // end container
      }
    }
  }
}
