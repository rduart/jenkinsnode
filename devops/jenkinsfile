pipeline {
  agent {
    kubernetes {
      yamlFile 'devops/KubernetesPod.yaml'
    }
  }
  environment {
    workingGitURL='https://github.com/rduart/jenkinsnode.git'
    workingBranch='main'
    
    // Set Proxy and no-proxy  -- no-proxy is needed for aws cli.
    http_proxy = 'http://proxy.cammis.medi-cal.ca.gov:8080'
    https_proxy = 'http://proxy.cammis.medi-cal.ca.gov:8080'
    no_proxy ='169.254.169.254,ec2.us-east-1.amazonaws.com,s3.us-east-1.amazonaws.com,s3.us-west-2.amazonaws.com,ec2.us-west-2.amazonaws.com,elasticloadbalancing.us-east-1.amazonaws.com,elasticloadbalancing.us-west-2.amazonaws.com,.dev.ocp.cammis.medi-cal.ca.gov,.bld.ocp.cammis.medi-cal.ca.gov,.qa.ocp.cammis.medi-cal.ca.gov,prd.ocp.cammis.medi-cal.ca.gov,.apps.dev.ocp.cammis.medi-cal.ca.gov,.apps.bld.ocp.cammis.medi-cal.ca.gov,.apps.qa.ocp.cammis.medi-cal.ca.gov,.apps.prd.ocp.cammis.medi-cal.ca.gov,s3.dualstack.us-east-1.amazonaws.com,s3.dualstack.us-west-2.amazonaws.com,.s3.dualstack.us-east-1.amazonaws.com,.s3.dualstack.us-west-2.amazonaws.com,.dkr.ecr.us-west-2.amazonaws.com,api.ecr.us-west-2.amazonaws.com, ,.dkr.ecr.us-east-1.amazonaws.com,api.ecr.us-east-1.amazonaws.com'
    
    // Set AWS Region for AWS CLI
    AWS_DEFAULT_REGION = 'us-west-2'
    
  }  
  stages {
    stage ('Prep') {
      steps {
        echo '*************************************************************'
        echo 'Before container -- Test'
        echo '*************************************************************'
        
        echo "http_proxy : ${http_proxy}"
        echo "https_proxy : ${https_proxy}"
        
        }  
    }
    stage('buildah') {
      steps {
        
        echo "http_proxy : ${http_proxy}"
        echo "https_proxy : ${https_proxy}"
        
        container('buildah') {
          script {
          
            // Get the aws creds type from jenkins. -- Command set the env variables for aws cli.
            withCredentials([aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'randy-aws-creds', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]) {
         
            //echo "AWS_ACCESS_KEY_ID : ${AWS_ACCESS_KEY_ID}"
            //echo "AWS_SECRET_ACCESS_KEY : ${AWS_SECRET_ACCESS_KEY}"
            
            echo '*************************************************************'
            echo '   buildah proxy setup'
            echo '*************************************************************'
        
            echo "http_proxy : ${http_proxy}"
            echo "https_proxy : ${https_proxy}"
            sh 'whoami' // Set to Root
            
            //Install unzip
            sh 'yum install -y unzip'
          
            // Get AWS CLI
            sh 'curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"'
            
            // Unzip AWS CLI
            sh 'unzip -q awscliv2.zip'
      
            // Installl AWS CLI
            sh './aws/install'
            
            // Show version
            sh 'aws --version'
            
            // Run aws ecr get-login-password and put in a variable.  -- Not needed can be removed
            def PASS = sh returnStdout: true, script:"aws ecr get-login-password"
            echo "PASS: $PASS" 
            
            // Run buildah login
            sh 'aws ecr get-login-password --region us-west-2 | buildah login -u AWS --password-stdin 136299550619.dkr.ecr.us-west-2.amazonaws.com'
            
            // Non-hard coded version
            //sh 'aws ecr get-login-password --region "{WS_DEFAULT_REGION}" | buildah login -u AWS --password-stdin "{ECR}"'
            
            //""" 
            }  //end with
          } // end script
        }  // end container
        container('node') {
         
          echo '*************************************************************'
          echo 'proxy setup'
          echo '*************************************************************'
          echo "http_proxy : ${http_proxy}"
          echo "https_proxy : ${https_proxy}"
          
          //sh 'wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.5.0.2216-linux.zip'
          
        }  // end container
      }
    }
  }
}
